name: CICD

on: [push, pull_request, workflow_dispatch]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: us-east-2

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-

      - run: npm ci --prefer-offline --no-audit --no-optional

      - run: npm run lint

      - run: npm run style

      - run: npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: [checks]
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/prod')
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-

      - run: npm ci --prefer-offline --no-audit --no-optional

      - uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install AWS CLI
        run: |
          python -m pip install --upgrade pip
          pip install awscli

      # Use ::set-env to set environment variables for the rest of the job
      - name: Set staging environment variables
        if: github.ref == 'refs/heads/main'
        run: |
          echo ::set-env name=ELEVENTY_ENV::development
          echo ::set-env name=S3_BUCKET::ilfairtax-staging
          echo ::set-env name=CLOUDFRONT_ID::${{ secrets.CLOUDFRONT_ID_STAGING }}

      - name: Set production environment variables
        if: github.ref == 'refs/heads/prod'
        run: |
          echo ::set-env name=ELEVENTY_ENV::production
          echo ::set-env name=S3_BUCKET::ilfairtax-production
          echo ::set-env name=CLOUDFRONT_ID::${{ secrets.CLOUDFRONT_ID_PRODUCTION }}

      - run: npm run build

      - run: ./.deploy.sh
